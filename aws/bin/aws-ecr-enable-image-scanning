#!/usr/bin/env python3

### [ECR.1] ECR private repositories should have image scanning configured
### This control checks whether a private ECR repository has image scanning configured. 
### This control fails if a private ECR repository doesnâ€™t have image scanning configured.

# This script configures image scanning on a private ECR repository.  
# A repo argument is optional. If no repo argument, all repos will have image scanning enabled
# This configuration method is deprecated in favor of enabling scanning at the registry level.  
# This script also performs that task, however, you will not pass security check without 
# using the deprecated method as well.


import os; SYSADMINTOOLS_DIR = os.getenv('SYSADMINTOOLS_DIR')
import sys; sys.path.insert(1, f'{SYSADMINTOOLS_DIR}/lib')
from datetime import datetime
import argparse
import logging
from AWS import AWS

### PARSE ARGUMENTS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
parser = argparse.ArgumentParser()
parser.add_argument('-r', '--repo', 
    help='Name of the ECR repository. If no repo argument, all repositories will have image scanning enabled.',  
    metavar=''
)
args = parser.parse_args()


### LOGGER FUNCTION >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
logging.basicConfig(
    filename=f'{SYSADMINTOOLS_DIR}/log/{datetime.now().strftime("%Y-%m-%d-%H:%M")}-aws-ecr-enable-image-scanning.log', 
    filemode='w', 
    format='%(message)s',
  level=logging.INFO
)
# Print all logs to screen
logging.getLogger().addHandler(logging.StreamHandler(sys.stdout))


### MAIN FUNCTION >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
def main():
    ECR_REPOS = [ AWS().getRepos(args.repo) ] if args.repo else AWS().getRepos()
    for repo in ECR_REPOS:
        if repo['imageScanningConfiguration']['scanOnPush']:
            logging.warning(f"Image scanning already enabled on {repo['repositoryName']}\n")
        else: 
            #input('Waiting for you')
            response = AWS().enableImageScanning(repo['repositoryName'], repo['registryId']) 
            if response and response['imageScanningConfiguration']['scanOnPush']:
                logging.info(f"SUCCESS: Image scanning enabled on {response['repositoryName']}.\n")
            else: logging.error(f"ERROR: Versioning NOT enabled on {repo['repositoryName']}.\n")

if __name__ == '__main__': main()



# aws s3api put-public-access-block \
#     --bucket my-bucket \
#     --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true"